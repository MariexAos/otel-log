receivers:
  filelog:
    include:
      - /var/log/pods/*/*/*.log
    exclude: 
      - /var/log/pods/*/otel-collector/*.log  
    start_at: end
    encoding: utf-8
    include_file_name: true
    include_file_path: true
    preserve_trailing_whitespaces: true
    preserve_leading_whitespaces: false
    operators:
      - id: extrace_time_from_json
        type: json_parser
        parse_from: body  # 整个 log 行是 JSON，直接解析
        timestamp:
          parse_from: attributes.time
          layout_type: strptime
          layout: '%Y-%m-%dT%H:%M:%S.%fZ'
      - id: extract_metadata_from_filepath
        type: regex_parser
        parse_from: attributes["log.file.path"]
        regex: ^/var/log/pods/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]+)/(?P<container_name>[^/]+)/(?P<restart_count>\d+)\.log$
      - type: move  # 将 log 字段作为新的 body
        from: attributes.log
        to: body
      - type: move
        from: attributes.namespace
        to: attributes["k8s.namespace.name"]
      - type: move
        from: attributes.pod_name
        to: attributes["k8s.pod.name"]
      - type: move
        from: attributes.uid
        to: attributes["k8s.pod.uid"]
      - type: move
        from: attributes.container_name
        to: attributes["k8s.container.name"]
      - type: move
        from: attributes.restart_count
        to: attributes["k8s.container.restartCount"]
      - type: recombine
        combine_field: body
        is_first_entry: body matches "^[^\\s]"
        source_identifier: attributes["log.file.path"]
processors:
  batch:
    timeout: 10s

exporters:
  kafka:
    brokers: ["kafka.kafka.orb.local:9092"]
    topic: "otel-proto"
    encoding: "otlp_proto"

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [batch]
      exporters: [kafka]